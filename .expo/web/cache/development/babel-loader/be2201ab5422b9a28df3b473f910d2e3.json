{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WilliamAllen\\\\Desktop\\\\core\\\\ios\\\\App.js\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Feed from \"./Components/AppTabNavigator/feed\";\nimport Core from \"./Components/AppTabNavigator/core\";\nimport Profile from \"./Components/profile\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport Topic from \"./Components/topics\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport TopicSingleView from \"./Components/TopicSingleView\";\nvar tab = createBottomTabNavigator();\nvar topicStack = createStackNavigator();\nvar coreStack = createStackNavigator();\n\nfunction topicNavigateFunc() {\n  return React.createElement(topicStack.Navigator, {\n    headerMode: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, React.createElement(topicStack.Screen, {\n    name: \"Topic\",\n    component: Topic,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), React.createElement(topicStack.Screen, {\n    name: \"TopicSingleView\",\n    component: TopicSingleView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction coreNavigateFunc() {\n  return React.createElement(coreStack.Navigator, {\n    headerMode: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(coreStack.Screen, {\n    name: \"Core\",\n    component: Core,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), React.createElement(coreStack.Screen, {\n    name: \"Profile\",\n    component: Profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default function App() {\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === \"core\") {\n            iconName = focused ? \"ios-disc\" : \"ios-disc\";\n          } else if (route.name === \"feed\") {\n            iconName = focused ? \"ios-home\" : \"ios-home\";\n          } else if (route.name === \"topics\") {\n            iconName = focused ? \"ios-paper\" : \"ios-paper\";\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 20\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: \"tomato\",\n      inactiveTintColor: \"black\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(tab.Screen, {\n    name: \"feed\",\n    component: Feed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), React.createElement(tab.Screen, {\n    name: \"core\",\n    component: coreNavigateFunc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), React.createElement(tab.Screen, {\n    name: \"topics\",\n    component: topicNavigateFunc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\n  }\n});","map":{"version":3,"sources":["C:/Users/WilliamAllen/Desktop/core/ios/App.js"],"names":["React","NavigationContainer","createBottomTabNavigator","Feed","Core","Profile","Ionicons","Topic","createStackNavigator","TopicSingleView","tab","topicStack","coreStack","topicNavigateFunc","coreNavigateFunc","App","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","paddingTop","Platform","OS","StatusBar","currentHeight"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Platform, StatusBar } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport Feed from \"./Components/AppTabNavigator/feed\";\r\nimport Core from \"./Components/AppTabNavigator/core\";\r\nimport Profile from \"./Components/profile\";\r\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\r\nimport Topic from \"./Components/topics\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport TopicSingleView from \"./Components/TopicSingleView\";\r\n\r\nconst tab = createBottomTabNavigator();\r\nconst topicStack = createStackNavigator();\r\nconst coreStack = createStackNavigator();\r\n\r\nfunction topicNavigateFunc() {\r\n  return (\r\n    <topicStack.Navigator headerMode={\"none\"}>\r\n      <topicStack.Screen name=\"Topic\" component={Topic} />\r\n      <topicStack.Screen name=\"TopicSingleView\" component={TopicSingleView} />\r\n    </topicStack.Navigator>\r\n  );\r\n}\r\n\r\nfunction coreNavigateFunc() {\r\n  return (\r\n    <coreStack.Navigator headerMode={\"none\"}>\r\n      <coreStack.Screen name=\"Core\" component={Core} />\r\n      <coreStack.Screen name=\"Profile\" component={Profile} />\r\n    </coreStack.Navigator>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <NavigationContainer>\r\n      <tab.Navigator\r\n        screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ focused, color, size }) => {\r\n            let iconName;\r\n            if (route.name === \"core\") {\r\n              iconName = focused ? \"ios-disc\" : \"ios-disc\";\r\n            } else if (route.name === \"feed\") {\r\n              iconName = focused ? \"ios-home\" : \"ios-home\";\r\n            } else if (route.name === \"topics\") {\r\n              iconName = focused ? \"ios-paper\" : \"ios-paper\";\r\n            }\r\n\r\n            // You can return any component that you like here!\r\n            return <Ionicons name={iconName} size={size} color={color} />;\r\n          },\r\n        })}\r\n        tabBarOptions={{\r\n          activeTintColor: \"tomato\",\r\n          inactiveTintColor: \"black\",\r\n        }}\r\n      >\r\n        <tab.Screen name=\"feed\" component={Feed} />\r\n        <tab.Screen name=\"core\" component={coreNavigateFunc} />\r\n        <tab.Screen name=\"topics\" component={topicNavigateFunc} />\r\n      </tab.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"white\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}